{"version":3,"file":"static/js/888.75b7bb45.chunk.js","mappings":"mMAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,MAAMC,EAAU,2CAEHC,EAAsBC,UACjC,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,uBAADK,OAAwBJ,IACxD,OAAOG,CAAI,EAGAE,EAAwBH,UACnC,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,iBAADK,OACbJ,EAAO,0BAAAI,OAAyBE,EAAK,gCAExD,OAAOH,CAAI,EAGAI,EAAoBL,UAC/B,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,UAADK,OACpBI,EAAO,KAAAJ,OAAIJ,EAAO,oBAE9B,OAAOG,CAAI,EAGAM,EAAoBP,UAC/B,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,UAADK,OACpBI,EAAO,aAAAJ,OAAYJ,EAAO,oBAEtC,OAAOG,EAAKO,IAAI,EAGLC,EAAoBT,UAC/B,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,UAADK,OACpBI,EAAO,aAAAJ,OAAYJ,EAAO,oBAEtC,OAAOG,EAAKS,OAAO,C,iFCjCd,MAAMC,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yGAQhBC,EAAKH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+DAMdG,EAAOL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,6KAajBK,EAAMP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2BAIhBO,EAAcT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8B,aC7BnC,MAiCA,EA9BkBS,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,MAAME,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAChB,EAAI,CAAAkB,SACFL,EAAOM,KAAIC,IAAuC,IAAtC,GAAEC,EAAE,MAAEC,EAAK,KAAEC,EAAI,YAAEC,GAAaJ,EAC3C,OACEJ,EAAAA,EAAAA,KAACZ,EAAE,CAAAc,UACDF,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAE,WAAAnC,OAAa8B,GAAMM,MAAO,CAAEC,KAAMd,GAAWI,UACnDW,EAAAA,EAAAA,MAACvB,EAAI,CAAAY,SAAA,CACFM,GACCR,EAAAA,EAAAA,KAACR,EAAG,CACFsB,IAAG,kCAAAvC,OAAoCiC,GACvCO,IAAU,OAALT,QAAK,IAALA,EAAAA,EAASC,KAGhBP,EAAAA,EAAAA,KAACR,EAAG,CAACsB,IAnBvB,8EAmBwCC,IAAU,OAALT,QAAK,IAALA,EAAAA,EAASC,KAEtCP,EAAAA,EAAAA,KAACN,EAAW,CAAAQ,SAAO,OAALI,QAAK,IAALA,EAAAA,EAASC,UAXpBF,EAcJ,OAIV,C,mFC/BA,MAAMW,EAAO/B,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oDAKlB8B,EAAQhC,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iHAQpB+B,EAASjC,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2I,aCZnC,MA+BA,EA/BkBS,IAAuB,IAAtB,aAAEuB,GAAcvB,EACjC,MAAOnB,EAAO2C,IAAYC,EAAAA,EAAAA,UAAS,IAcnC,OACER,EAAAA,EAAAA,MAACG,EAAI,CAACM,SAZSC,IACfA,EAAMC,iBAEe,KAAjB/C,EAAMgD,QAIVN,EAAa1C,EAAMgD,QACnBL,EAAS,KAJPM,MAAM,+BAII,EAIaxB,SAAA,EACvBF,EAAAA,EAAAA,KAACiB,EAAK,CACJU,KAAK,OACLpB,KAAK,cACLqB,MAAOnD,EACPoD,aAAa,MACbC,WAAS,EACTC,YAAY,wBACZC,SArBW5B,IAAA,IAAC,OAAE6B,GAAQ7B,EAAA,OAAKgB,EAASa,EAAOL,MAAM,KAuBnD5B,EAAAA,EAAAA,KAACkB,EAAM,CAAAhB,SAAC,aACH,E,wCC5BJ,MAAMgC,EAAmBjD,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wJCmD1C,EA7CmBgD,KACjB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,IAAgB,CAAE7D,MAAO,MAC9CoB,EAAQ0C,IAAalB,EAAAA,EAAAA,UAAS,KAC9BmB,EAASC,IAAcpB,EAAAA,EAAAA,WAAS,IAChCqB,EAAOC,IAAYtB,EAAAA,EAAAA,WAAS,IAC5BuB,EAAWC,IAAgBxB,EAAAA,EAAAA,WAAS,GAErCyB,EAAaV,EAAOW,IAAI,SA0B9B,OAnBAC,EAAAA,EAAAA,YAAU,KACR,IAAKF,EAAY,OAECzE,WAChBoE,GAAW,GAEX,IACE,MAAMQ,QAAiBzE,EAAAA,EAAAA,IAAsBsE,GAC7CP,EAAUU,EAASlE,QAKrB,CAJE,MAAOmE,GACPP,EAASO,EACX,CAAC,QACCT,GAAW,EACb,GAGFU,EAAW,GACV,CAACL,EAAYF,KAGd/B,EAAAA,EAAAA,MAACqB,EAAgB,CAAAhC,SAAA,EACfF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAACoD,EAAS,CAACjC,aA3BM1C,IACnB4D,EAAU,CAAE5D,UACZoE,GAAa,EAAK,IA0BfL,IAAWxC,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,IAClBX,IAAS7B,EAAAA,EAAAA,MAAA,KAAAX,SAAA,CAAG,UAAQwC,EAAMY,WACR,IAAlBzD,EAAO0D,QAAgBX,IAAcJ,IAAWxC,EAAAA,EAAAA,KAAA,KAAAE,SAAG,qBACnDL,EAAO0D,OAAS,IAAKvD,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CAAC3D,OAAQA,MACxB,C","sources":["api/api.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=8f33823ca84e1a0e665e0e760de9426d';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${API_KEY}`);\n  return data;\n};\n\nexport const searchMoviesByKeyword = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n  justify-content: center;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n  padding: 15px;\n  margin: 0;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n\n  :hover {\n    scale: 1.1;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n`;\n\nexport const PosterTitle = styled.p`\n  font-size: 20px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { List, Li, Card, Img, PosterTitle } from './MovieList.styled';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, name, poster_path }) => {\n          return (\n            <Li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Card>\n                  {poster_path ? (\n                    <Img\n                      src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                      alt={title ?? name}\n                    />\n                  ) : (\n                    <Img src={defaultImg} alt={title ?? name} />\n                  )}\n                  <PosterTitle>{title ?? name}</PosterTitle>\n                </Card>\n              </Link>\n            </Li>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { Button, Form, Input } from './SearchBar.styled';\n\nconst SearchBar = ({ handleSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const onChange = ({ target }) => setQuery(target.value);\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      alert('Enter the title of the movie');\n      return;\n    }\n    handleSearch(query.trim());\n    setQuery('');\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input\n        type=\"text\"\n        name=\"searchQuery\"\n        value={query}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search for a movie...\"\n        onChange={onChange}\n      />\n      <Button>Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const StyledMoviesPage = styled.div`\n  text-align: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  h1 {\n    margin-bottom: 20px;\n  }\n\n  p {\n    color: red;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport MovieList from '../../components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMoviesByKeyword } from 'api/api';\nimport { StyledMoviesPage } from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [params, setParams] = useSearchParams({ query: '' });\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const moviesName = params.get('query');\n\n  const handleSearch = query => {\n    setParams({ query });\n    setSubmitted(true);\n  };\n\n  useEffect(() => {\n    if (!moviesName) return;\n\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const response = await searchMoviesByKeyword(moviesName);\n        setMovies(response.results);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [moviesName, submitted]);\n\n  return (\n    <StyledMoviesPage>\n      <h1>Movies Search</h1>\n      <SearchBar handleSearch={handleSearch} />\n      {loading && <Loader />}\n      {error && <p>Error: {error.message}</p>}\n      {movies.length === 0 && submitted && !loading && <p>No movies found.</p>}\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </StyledMoviesPage>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["axios","API_KEY","fetchTrendingMovies","async","data","concat","searchMoviesByKeyword","query","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","results","List","styled","_templateObject","_taggedTemplateLiteral","Li","_templateObject2","Card","_templateObject3","Img","_templateObject4","PosterTitle","_templateObject5","_ref","movies","location","useLocation","_jsx","_Fragment","children","map","_ref2","id","title","name","poster_path","Link","to","state","from","_jsxs","src","alt","Form","Input","Button","handleSearch","setQuery","useState","onSubmit","event","preventDefault","trim","alert","type","value","autoComplete","autoFocus","placeholder","onChange","target","StyledMoviesPage","MoviesPage","params","setParams","useSearchParams","setMovies","loading","setLoading","error","setError","submitted","setSubmitted","moviesName","get","useEffect","response","err","fetchData","SearchBar","Loader","message","length","MovieList"],"sourceRoot":""}