{"version":3,"file":"static/js/219.6d93c0f6.chunk.js","mappings":"mMAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,MAAMC,EAAU,2CAEHC,EAAsBC,UACjC,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,uBAADK,OAAwBJ,IACxD,OAAOG,CAAI,EAGAE,EAAwBH,UACnC,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,iBAADK,OACbJ,EAAO,0BAAAI,OAAyBE,EAAK,gCAExD,OAAOH,CAAI,EAGAI,EAAoBL,UAC/B,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,UAADK,OACpBI,EAAO,KAAAJ,OAAIJ,EAAO,oBAE9B,OAAOG,CAAI,EAGAM,EAAoBP,UAC/B,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,UAADK,OACpBI,EAAO,aAAAJ,OAAYJ,EAAO,oBAEtC,OAAOG,EAAKO,IAAI,EAGLC,EAAoBT,UAC/B,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,UAADK,OACpBI,EAAO,aAAAJ,OAAYJ,EAAO,oBAEtC,OAAOG,EAAKS,OAAO,C,yGCjCd,MAAMC,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2IAQpBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4CAIpBG,EAAYL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uEAKtBK,EAAWP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wDAIpBO,EAAgBT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8B,aCZrC,MAwDA,EArDaS,KACX,MAAMC,GAASC,EAAAA,EAAAA,OACRC,EAAOC,IAAYC,EAAAA,EAAAA,WAAS,IAC5BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,OAChCG,EAAQC,IAAaJ,EAAAA,EAAAA,WAAS,GAqBrC,OAnBAK,EAAAA,EAAAA,YAAU,KACejC,WACrB,IACEgC,GAAU,GACVL,GAAS,GAET,MAAMO,QAAe3B,EAAAA,EAAAA,IAAkBiB,EAAOlB,SAC9CwB,EAAWI,EAMb,CALE,MAAOR,GACPS,QAAQT,MAAMA,GACdC,GAAS,EACX,CAAC,QACCK,GAAU,EACZ,GAGFI,EAAgB,GACf,CAACZ,EAAOlB,WAGT+B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGR,IAAUS,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACbb,IAAUG,IAAWW,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+BACxBV,GAAWA,EAAQY,OAAS,IAC3BD,EAAAA,EAAAA,KAAC7B,EAAQ,CAAA4B,SACNV,EAAQa,KACPC,IAAA,IAAC,UAAEC,EAAS,GAAEC,EAAE,KAAEC,EAAI,aAAEC,EAAY,cAAEC,GAAeL,EAAA,OACnDN,EAAAA,EAAAA,MAACtB,EAAQ,CAAAwB,SAAA,EACPC,EAAAA,EAAAA,KAACvB,EAAS,CACRgC,IACEF,EAAY,mCAAA7C,OAC2B6C,GAvCzD,8EA0CgBG,IAAKF,KAEPX,EAAAA,EAAAA,MAAClB,EAAQ,CAAAoB,SAAA,CAAC,UAAQO,MAClBT,EAAAA,EAAAA,MAAChB,EAAa,CAAAkB,SAAA,CAAC,SAAOK,OAVTC,EAWJ,QAKlB,C","sources":["api/api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=8f33823ca84e1a0e665e0e760de9426d';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${API_KEY}`);\n  return data;\n};\n\nexport const searchMoviesByKeyword = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  text-align: center;\n  min-height: 450px;\n  margin: -15px;\n`;\nexport const CastItem = styled.li`\n  width: 200px;\n  margin: 15px;\n`;\nexport const CastImage = styled.img`\n  height: 300px;\n  overflow: hidden;\n  object-fit: cover;\n`;\nexport const CastName = styled.h3`\n  font-size: 18px;\n  letter-spacing: 0.2em;\n`;\nexport const CastCharacter = styled.p`\n  font-size: 15px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from '../../api/api';\nimport {\n  CastCharacter,\n  CastImage,\n  CastItem,\n  CastList,\n  CastName,\n} from './Cast.styled';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst Cast = () => {\n  const params = useParams();\n  const [error, setError] = useState(false);\n  const [authors, setAuthors] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n\n        const result = await fetchMovieCredits(params.movieId);\n        setAuthors(result);\n      } catch (error) {\n        console.error(error);\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n\n    fetchMovieCast();\n  }, [params.movieId]);\n\n  return (\n    <>\n      {loader && <p>Loading...</p>}\n      {error && !authors && <p>Error loading cast details</p>}\n      {authors && authors.length > 0 && (\n        <CastList>\n          {authors.map(\n            ({ character, id, name, profile_path, original_name }) => (\n              <CastItem key={id}>\n                <CastImage\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w185/${profile_path}`\n                      : defaultImg\n                  }\n                  alt={original_name}\n                />\n                <CastName>Actor: {name}</CastName>\n                <CastCharacter>Role: {character}</CastCharacter>\n              </CastItem>\n            )\n          )}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","fetchTrendingMovies","async","data","concat","searchMoviesByKeyword","query","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","results","CastList","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","CastImage","_templateObject3","CastName","_templateObject4","CastCharacter","_templateObject5","Cast","params","useParams","error","setError","useState","authors","setAuthors","loader","setLoader","useEffect","result","console","fetchMovieCast","_jsxs","_Fragment","children","_jsx","length","map","_ref","character","id","name","profile_path","original_name","src","alt"],"sourceRoot":""}