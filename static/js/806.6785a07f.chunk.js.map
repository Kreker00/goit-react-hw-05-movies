{"version":3,"file":"static/js/806.6785a07f.chunk.js","mappings":"mMAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,MAAMC,EAAU,2CAEHC,EAAsBC,UACjC,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,uBAADK,OAAwBJ,IACxD,OAAOG,CAAI,EAGAE,EAAwBH,UACnC,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,iBAADK,OACbJ,EAAO,0BAAAI,OAAyBE,EAAK,gCAExD,OAAOH,CAAI,EAGAI,EAAoBL,UAC/B,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,UAADK,OACpBI,EAAO,KAAAJ,OAAIJ,EAAO,oBAE9B,OAAOG,CAAI,EAGAM,EAAoBP,UAC/B,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,UAADK,OACpBI,EAAO,aAAAJ,OAAYJ,EAAO,oBAEtC,OAAOG,EAAKO,IAAI,EAGLC,EAAoBT,UAC/B,MAAM,KAAEC,SAAeJ,EAAAA,EAAAA,IAAU,UAADK,OACpBI,EAAO,aAAAJ,OAAYJ,EAAO,oBAEtC,OAAOG,EAAKS,OAAO,C,kHCjCd,MAAMC,EAAmBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mEAM7BC,EAAeH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yBAIvBG,EAAaL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8CAKtBK,EAAaP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oEAKtBO,EAAgBT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,kC,aCVtC,MAgDA,EAhDgBS,KACd,MAAM,QAAEjB,IAAYkB,EAAAA,EAAAA,OACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,OAChCC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,IAC9BG,EAAOC,IAAYJ,EAAAA,EAAAA,WAAS,GAqBnC,OAnBAK,EAAAA,EAAAA,YAAU,KACehC,WACrB,IACE6B,GAAU,GACVE,GAAS,GAET,MAAME,QAAexB,EAAAA,EAAAA,IAAkBH,GACvCoB,EAAWO,EAMb,CALE,MAAOH,GACPI,QAAQJ,MAAMA,GACdC,GAAS,EACX,CAAC,QACCF,GAAU,EACZ,GAGFM,CAAe7B,EAAQ,GACtB,CAACA,IAEAsB,GACKQ,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAIdC,EAAAA,EAAAA,MAAC3B,EAAgB,CAAA4B,SAAA,CACdT,IAASM,EAAAA,EAAAA,KAACrB,EAAY,CAAAwB,SAAC,0BACvBd,GAAWA,EAAQe,OAAS,GAC3BJ,EAAAA,EAAAA,KAACnB,EAAU,CAAAsB,SACRd,EAAQgB,KAAIC,IAAA,IAAC,OAAEC,EAAM,GAAEC,EAAE,QAAEC,GAASH,EAAA,OACnCJ,EAAAA,EAAAA,MAACnB,EAAU,CAAAoB,SAAA,EACTH,EAAAA,EAAAA,KAACf,EAAa,CAAAkB,SAAEI,KAChBP,EAAAA,EAAAA,KAAA,KAAAG,SAAIM,MAFWD,EAGJ,OAIjBR,EAAAA,EAAAA,KAACrB,EAAY,CAAAwB,SAAC,kCAEC,C","sources":["api/api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=8f33823ca84e1a0e665e0e760de9426d';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${API_KEY}`);\n  return data;\n};\n\nexport const searchMoviesByKeyword = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n","import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  padding: 20px;\n  max-width: 1200px;\n  margin: auto;\n`;\n\nexport const ErrorMessage = styled.p`\n  color: red;\n`;\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 20px;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const AuthorHeading = styled.h3`\n  margin-bottom: 10px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../api/api';\nimport Loader from 'components/Loader/Loader';\nimport {\n  AuthorHeading,\n  ErrorMessage,\n  ReviewItem,\n  ReviewList,\n  ReviewsContainer,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieInfo = async movieId => {\n      try {\n        setLoader(true);\n        setError(false);\n\n        const result = await fetchMovieReviews(movieId);\n        setReviews(result);\n      } catch (error) {\n        console.error(error);\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n\n    fetchMovieInfo(movieId);\n  }, [movieId]);\n\n  if (loader) {\n    return <Loader />;\n  }\n\n  return (\n    <ReviewsContainer>\n      {error && <ErrorMessage>Error loading details</ErrorMessage>}\n      {reviews && reviews.length > 0 ? (\n        <ReviewList>\n          {reviews.map(({ author, id, content }) => (\n            <ReviewItem key={id}>\n              <AuthorHeading>{author}</AuthorHeading>\n              <p>{content}</p>\n            </ReviewItem>\n          ))}\n        </ReviewList>\n      ) : (\n        <ErrorMessage>Sorry, no reviews available</ErrorMessage>\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","fetchTrendingMovies","async","data","concat","searchMoviesByKeyword","query","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","results","ReviewsContainer","styled","_templateObject","_taggedTemplateLiteral","ErrorMessage","_templateObject2","ReviewList","_templateObject3","ReviewItem","_templateObject4","AuthorHeading","_templateObject5","Reviews","useParams","reviews","setReviews","useState","loader","setLoader","error","setError","useEffect","result","console","fetchMovieInfo","_jsx","Loader","_jsxs","children","length","map","_ref","author","id","content"],"sourceRoot":""}