{"version":3,"file":"static/js/710.983dc0e6.chunk.js","mappings":"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","sources":["api/api.js","pages/MovieDetailsPage/MovieDetailsPage.styled.js","components/ButtonBack/ButtonBack.styled.js","components/ButtonBack/ButtonBack.js","pages/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=8f33823ca84e1a0e665e0e760de9426d';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${API_KEY}`);\n  return data;\n};\n\nexport const searchMoviesByKeyword = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n","import styled from 'styled-components';\n\nexport const DetailsContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const Button = styled.button`\n  background-color: #4caf50;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  cursor: pointer;\n`;\n\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const MovieImage = styled.img`\n  height: auto;\n  max-width: 300px;\n  height: auto;\n  margin-right: 20px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin: 10px 0;\n`;\n\nexport const Score = styled.p`\n  margin: 5px 0;\n`;\n\nexport const Overview = styled.span`\n  margin: 10px 0;\n`;\n\nexport const Genres = styled.span`\n  margin: 10px 0;\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin-top: 20px;\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n\nexport const InfoHeading = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const InfoList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 10px;\n`;\n\nexport const InfoItem = styled.li`\n  margin-bottom: 10px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-bottom: 5px;\n\n  :hover {\n    color: white;\n    background-color: tomato;\n  }\n`;\n\nexport const LinkBack = styled(Link)`\n  text-decoration: none;\n`;\n","import { Button, LinkBack } from './ButtonBack.styled';\n\nconst ButtonBack = ({ to }) => {\n  return (\n    <LinkBack to={to}>\n      <Button> Come Back</Button>\n    </LinkBack>\n  );\n};\n\nexport default ButtonBack;\n","import { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../api/api';\nimport {\n  AdditionalInfo,\n  DetailsContainer,\n  Genres,\n  InfoBox,\n  InfoHeading,\n  InfoItem,\n  InfoList,\n  MovieImage,\n  MovieTitle,\n  Overview,\n  Score,\n} from './MovieDetailsPage.styled';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [moviesDetails, setMoviesDetails] = useState(null);\n  const backLinkRef = useRef(location);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const details = await fetchMovieDetails(movieId);\n        setMoviesDetails(details);\n      } catch (error) {\n        console.error('Error fetching movie details:', error.message);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (!moviesDetails) return;\n\n  const { poster_path, title, genres, overview, vote_average, release_date } =\n    moviesDetails;\n\n  return (\n    <DetailsContainer>\n      <ButtonBack to={backLinkRef.current.state?.from ?? '/'} />\n\n      <InfoBox>\n        <div>\n          <MovieImage\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                : defaultImg\n            }\n            alt={title}\n          />\n        </div>\n        <div>\n          <MovieTitle>\n            {title} {release_date?.substr(0, 4)}\n          </MovieTitle>\n          <Score>User Score: {Math.floor(vote_average * 10)}%</Score>\n          <Overview>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n          </Overview>\n          <Genres>\n            <h2>Genres</h2>\n            <ul>\n              {genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n          </Genres>\n        </div>\n      </InfoBox>\n\n      <AdditionalInfo>\n        <InfoHeading>Additional information</InfoHeading>\n        <InfoList>\n          <InfoItem>\n            <Link to={`cast`}>Cast</Link>\n          </InfoItem>\n          <InfoItem>\n            <Link to={`reviews`}>Reviews</Link>\n          </InfoItem>\n        </InfoList>\n      </AdditionalInfo>\n      <Outlet />\n    </DetailsContainer>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["axios","API_KEY","fetchTrendingMovies","async","data","concat","searchMoviesByKeyword","query","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","results","DetailsContainer","styled","_templateObject","_taggedTemplateLiteral","InfoBox","_templateObject2","_templateObject3","MovieImage","_templateObject4","MovieTitle","_templateObject5","Score","_templateObject6","Overview","_templateObject7","Genres","_templateObject8","AdditionalInfo","_templateObject9","InfoHeading","_templateObject10","InfoList","_templateObject11","InfoItem","_templateObject12","Button","LinkBack","Link","_ref","to","_jsx","children","MoviesDetails","_backLinkRef$current$","_backLinkRef$current$2","useParams","location","useLocation","moviesDetails","setMoviesDetails","useState","backLinkRef","useRef","useEffect","details","error","console","message","fetchData","poster_path","title","genres","overview","vote_average","release_date","_jsxs","ButtonBack","current","state","from","src","alt","substr","Math","floor","map","id","name","Outlet"],"sourceRoot":""}